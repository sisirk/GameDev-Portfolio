(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["about"],{"03cd":function(e,t,a){"use strict";var s=a("e601"),i=a.n(s);i.a},"15b4":function(e,t,a){},"1ba2":function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},i=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",[e._v("Résumé")]),a("div",{staticClass:"paragraph"},[e._v(" I'm "),a("strong",[e._v("Sisir Kadiveti")]),e._v(", a software engineer and indie game developer currently based in Seattle, Washington. "),a("br"),a("br"),e._v(" Over the past several years, I've worked professionally as a developer at Microsoft and Amazon, and I've also built experience at Intel as an intern. My background spans full-stack software, data engineering, and game development, with a strong foundation in C++, Python, C#, Blender, and Unreal Engine. "),a("br"),a("br"),e._v(" In 2025 I founded "),a("a",{attrs:{href:"https://galacticgatewaygames.com/#",target:"_blank"}},[e._v("Galactic Gateway LLC")]),e._v(" to formalize my indie development, though I've been building "),a("a",{attrs:{href:"https://store.steampowered.com/app/3785230/Ninja_Froggy/",target:"_blank"}},[e._v("Ninja Froggy™")]),e._v(" for over two years. Ninja Froggy is a semi-open-world roguelite endless runner made in Unreal Engine, where I created every major system, from procedural terrain generation to AI pathfinding to a custom movement system with a unique jump mechanic, all from the ground up, since the default Unreal Engine templates couldn't support my vision. Alongside the game, I design and sell 3D assets (that I also use in my games), participate in game jams, and run a "),a("a",{attrs:{href:"https://www.youtube.com/channel/UCsFRYYdH_maM6EVQYDYJvVg",target:"_blank"}},[e._v("YouTube")]),e._v(" channel documenting the development process. "),a("br"),a("br"),e._v(" I enjoy building tools and systems that blend creativity with technical depth, whether it's optimizing large-scale software, designing procedural mechanics, or inventing new gameplay loops. Outside of coding and game dev, I'm passionate about storytelling, world-building, and sharing my creative journey with others. "),a("div",{staticStyle:{"margin-top":"20px","margin-bottom":"20px"}},[a("a",{staticClass:"download-link",attrs:{href:"d/Sisir_Kadiveti_Resume_GameDev.pdf",target:"_blank"}},[a("i",{staticClass:"fa fa-download fa-lg fa-fw"}),e._v(" Download résumé as PDF")]),a("div",{staticStyle:{clear:"both"}})])]),a("div",{staticClass:"photo"},[a("img",{attrs:{src:"img/resume-photo.png",alt:"Photo of Sisir",width:"256",height:"256"}})]),a("div",{staticStyle:{clear:"both"}}),a("div",{staticClass:"full-content"},[a("h2",[e._v("Work experience")]),a("h3",[e._v(" Indie Developer "),a("span",{staticClass:"company-name"},[e._v(" · Galactic Gateway LLC ")])]),a("h4",[e._v("Apr 2023 - Present")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v(" Engineered a procedural world generation system in "),a("strong",[e._v("Unreal Engine (C++)")]),e._v(" for a cross-platform "),a("strong",[e._v("(Android, iOS, PC, console)")]),e._v(" 3D runner using "),a("strong",[e._v("layered Perlin Noise, spatial partitioning, seed control, and terrain masks")]),e._v(" for biome diversity. ")]),a("li",[e._v(" Implemented asynchronous chunk streaming with "),a("strong",[e._v("greedy meshing")]),e._v(", mesh LOD, and multithreaded job queues to minimize frame hitches, reduce draw calls, and optimize rendering in large open spaces. ")]),a("li",[e._v(" Developed a modular "),a("strong",[e._v("AI")]),e._v(" architecture combining "),a("strong",[e._v("behavior trees, FSMs, and custom A*")]),e._v(" pathfinding with parameterized heuristics to enable terrain-aware, decision-driven enemies that react intelligently to player behavior. ")]),a("li",[e._v(" Built core systems for melee and ranged combat, procedurally spawned traps, collectibles, and stat modifiers, with Blueprint-integrated gameplay logic and profiling for memory, performance, and tick efficiency. ")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: Unreal Engine, Blueprint, C++, Blender, Photoshop, Git, Android/iOS")]),a("br"),a("h3",[e._v(" Software Design Engineer "),a("span",{staticClass:"company-name"},[e._v(" · Microsoft ")])]),a("h4",[e._v("Aug 2023 - Feb 2025")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v(" Oversaw daily TPC-E, TPC-H, and HammerDB workloads on "),a("strong",[e._v("Windows")]),e._v(" and "),a("strong",[e._v("Linux")]),e._v(", analyzing benchmark data with "),a("strong",[e._v("PowerBi")]),e._v(" to identify regression, improving performance monitoring. ")]),a("li",[e._v(" Developed a self-service web portal using "),a("strong",[e._v("C#, .NET, JavaScript, React, Node.js, Python, and Flask")]),e._v(", integrating automated data pipelines with "),a("strong",[e._v("ML-ready")]),e._v(" anomaly detection support, and reducing manual interventions by 50%. ")]),a("li",[e._v(" Designed and optimized "),a("strong",[e._v("SQL")]),e._v(" databases in "),a("strong",[e._v("SSMS")]),e._v(", creating stored procedures and automating data handling to enhance query performance, reduce execution times, and improve system reliability. ")]),a("li",[e._v(" Led regression analysis for "),a("strong",[e._v("Windows Server 2025")]),e._v(" vs. "),a("strong",[e._v("Windows Server 2022")]),e._v(", automating Xperf and Kernrate data collection with "),a("strong",[e._v("C#")]),e._v(" scripts using "),a("strong",[e._v(".NET")]),e._v(" diagnostics tools for deeper performance insights. ")]),a("li",[e._v(" Tested the impact of memory compression across "),a("strong",[e._v("SQL")]),e._v(" Server instances, using "),a("strong",[e._v("PowerShell")]),e._v(" scripts to optimize memory usage and extract telemetry for exploratory data analysis and future use in predictive resource management. ")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: C#, Python, PowerShell, JavaScript, SQL, HTML/CSS, .NET, React, Node.js, Flask, Power BI, Linux")]),a("br"),a("h3",[e._v(" Software Development Engineer "),a("span",{staticClass:"company-name"},[e._v(" · Amazon ")])]),a("h4",[e._v("May 2022 - Mar 2023")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v(" Spearheaded the development of innovative Alexa products and services for the Alexa Smart Properties (ASP) team, enhancing business processes across diverse verticals including hotels, resorts, and hospitals. ")]),a("li",[e._v(" Engineered and implemented multiple adapters with "),a("strong",[e._v("Kotlin")]),e._v(", utilizing "),a("strong",[e._v("AWS")]),e._v(" services and API calls to seamlessly integrate Alexa skills into EU-based subscriptions for various Amazon services, boosting user engagement. ")]),a("li",[e._v(" Optimized ASP's canary test suites using "),a("strong",[e._v("AWS")]),e._v(" tools, ensuring rigorous "),a("strong",[e._v("NLP-based testing")]),e._v(' of "Hey Alexa..." utterances across subscriptions, and reducing false positives/negatives in voice recognition by 20-30%. ')]),a("li",[e._v(" Automated the integration of canary test results with "),a("strong",[e._v("TestRail")]),e._v(" via the "),a("strong",[e._v("TestRail API")]),e._v(", improving testing efficiency and allowing the ASP team to effortlessly monitor the status of each test. ")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: Kotlin, Java, Python, AWS, Alexa, TestRail")]),a("br"),a("h3",[e._v(" Software Developer (Capstone Project) "),a("span",{staticClass:"company-name"},[e._v(" · Microsoft (Mojang Studios) ")])]),a("h4",[e._v("Jan 2021 - Jun 2021")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v(" Collaborated with a team of three developers and a senior game designer at Mojang Studios to revolutionize Minecraft's pathfinding algorithm, enabling seamless compatibility with actors and paths of various sizes. ")]),a("li",[e._v(" Led the development of a robust standalone app in "),a("strong",[e._v("C++")]),e._v(", employing the "),a("strong",[e._v("A*")]),e._v(" algorithm for prototyping and meticulously testing diverse pathfinders. This significantly enhanced the performance and navigation capabilities of the actor when testing. ")]),a("li",[e._v(" Developed a dynamic standalone 3D visualizer using "),a("strong",[e._v("C#")]),e._v(" and "),a("strong",[e._v("Unity")]),e._v(" to vividly render custom paths and created tools for thorough debugging. This enhanced the team's ability to analyze and optimize paths with higher precision and efficiency. ")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: C++, C#, Unity")]),a("br"),a("h3",[e._v(" Technical Intern "),a("span",{staticClass:"company-name"},[e._v(" · Intel ")])]),a("h4",[e._v("Jun 2019 - Sep 2019")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v(" Collaborated with the Firmware team to successfully develop a powerful software interface for the VPU (Vision Processing Unit), enabling seamless integration and enhanced functionality. ")]),a("li",[e._v(" Conducted thorough profiling and analysis of the Windows MCDM driver, identifying key areas for optimization and implementing targeted improvements to enhance performance and stability. ")]),a("li",[e._v(" Led the development of a user-friendly GUI using C# and the .NET framework, facilitating rigorous testing of the Movidius MyriadX VPU. ")]),a("li",[e._v(" Engineered a basic machine learning application capable of face detection and recognition, serving as a crucial tool for further VPU testing and validation. ")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: C#, PowerShell, .NET, EmguCV")]),a("br"),a("h3",[e._v(" Software Developer/Graphic Designer "),a("span",{staticClass:"company-name"},[e._v(" · EarthGames Studio ")])]),a("h4",[e._v("Jan 2019 - Jun 2019")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v(" Worked in a team of eight to develop Deal: A Green New Election, inspired by the Green New Deal Movement. Achieved remarkable success, garnering hundreds of downloads and receiving positive user reviews on Google Play and the App Store. ")]),a("li",[e._v(" Designed and developed around 20 custom assets, pixel art, and animations for various game elements, using "),a("strong",[e._v("C#")]),e._v(" and the "),a("strong",[e._v("Unity")]),e._v(" Game Engine. ")]),a("li",[e._v(" Led play-testing sessions, and incorporated user feedback, leading to iterative improvements and a polished final product. ")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: Unity, C#, Android/iOS, Paint.NET")]),a("h2",[e._v("Projects")]),a("h3",[e._v("Bubble Bobbler (Global Game Jam 2025)")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v("Built a 3D platformer in Unreal Engine 5 with "),a("strong",[e._v("C++")]),e._v(", using physics-based bubbles for traversal, and puzzle-solving.")]),a("li",[e._v("Engineered a custom Chaos Physics system for buoyancy, elastic collisions, and reactive environmental forces.")]),a("li",[e._v("Implemented AI with "),a("strong",[e._v("Behavior Trees, EQS, and NavMesh")]),e._v(" for responsive enemy movement and targeting.")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: Unreal Engine, Blueprint, C++, Blender, Photoshop")]),a("br"),a("h3",[e._v("Pokémon-Inspired Game")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v("Built a "),a("strong",[e._v("Unity")]),e._v("-based turn-based battle prototype with stat-driven combat, enemy AI, and capture mechanics.")]),a("li",[e._v("Integrated "),a("strong",[e._v("PokéAPI")]),e._v(" data using "),a("strong",[e._v("JSON")]),e._v(" parsing and filters to enable dynamic team building across "),a("strong",[e._v("Android")]),e._v(" and "),a("strong",[e._v("Web")]),e._v(".")]),a("li",[e._v("Implemented persistent progression using "),a("strong",[e._v("SQLite")]),e._v(" for session continuity and team management.")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: Unity, C#, Android, SQLite, JSON")]),a("br"),a("h3",[e._v("Image Processing Application")]),a("div",{staticClass:"experience"},[a("ul",[a("li",[e._v("Built a desktop tool in "),a("strong",[e._v("Python")]),e._v(" with a "),a("strong",[e._v("Tkinter")]),e._v(" GUI and OpenCV backend for real-time image transformations.")]),a("li",[e._v("Integrated optional "),a("strong",[e._v("PyTorch/TensorFlow")]),e._v(" models to experiment with "),a("strong",[e._v("ML-based")]),e._v(" filters for stylization.")]),a("li",[e._v("Used "),a("strong",[e._v("PySpark")]),e._v(" to batch pre-process large image sets and optimized matrix operations with "),a("strong",[e._v("NumPy")]),e._v(" for 30% speedup.")])])]),a("div",{staticClass:"tech-stack"},[e._v("Tech stack: Python, NumPy, Tkinter, OpenCV, PyTorch, PySpark, TensorFlow")]),a("h2",[e._v("Skills")]),a("div",{staticClass:"skills-grid"},[a("section",{staticClass:"skills-col"},[a("h3",[e._v("Languages")]),a("ul",{staticClass:"tags"},[a("li",[e._v("C++")]),a("li",[e._v("C#")]),a("li",[e._v("Python")]),a("li",[e._v("Java")]),a("li",[e._v("JavaScript")]),a("li",[e._v("TypeScript")]),a("li",[e._v("Kotlin")]),a("li",[e._v("SQL")]),a("li",[e._v("PowerShell")]),a("li",[e._v("HLSL/GLSL")])])]),a("section",{staticClass:"skills-col"},[a("h3",[e._v("Game Engines/Tools")]),a("ul",{staticClass:"tags"},[a("li",[e._v("Unreal Engine")]),a("li",[e._v("Unity")]),a("li",[e._v("Blueprint")]),a("li",[e._v("Behavior Trees")]),a("li",[e._v("NavMesh")]),a("li",[e._v("World Partition")]),a("li",[e._v("EQS")])])]),a("section",{staticClass:"skills-col"},[a("h3",[e._v("3D Art/Design")]),a("ul",{staticClass:"tags"},[a("li",[e._v("Blender")]),a("li",[e._v("Photoshop")]),a("li",[e._v("Substance Painter")]),a("li",[e._v("Audacity")]),a("li",[e._v("After Effects")]),a("li",[e._v("Premiere Pro")])])]),a("section",{staticClass:"skills-col"},[a("h3",[e._v("Development Tools")]),a("ul",{staticClass:"tags"},[a("li",[e._v("Git")]),a("li",[e._v("Perforce")]),a("li",[e._v("Docker")]),a("li",[e._v("Azure")]),a("li",[e._v("AWS")]),a("li",[e._v(".NET")]),a("li",[e._v("Linux/Unix")]),a("li",[e._v("Android")]),a("li",[e._v("REST APIs")]),a("li",[e._v("JSON")])])])]),a("h2",[e._v("Education")]),a("h3",[e._v("University of Washington, Seattle (Sep 2017 - Dec 2021)")]),a("h4",[e._v("Bachelor of Science in Electrical and Computer Engineering")]),a("div",[e._v("Specialty in digital signal processing (DSP)")]),a("h2",[e._v("Languages")]),a("h3",[e._v("English, Spanish, Japanese, Hindi, Telugu")])])])}],n=a("2b0e"),r=n["a"].extend({name:"Resume"}),o=r,l=(a("7d9d"),a("2877")),c=Object(l["a"])(o,s,i,!1,null,"649f5df0",null);t["default"]=c.exports},"1e66":function(e,t,a){"use strict";var s=a("dec8"),i=a.n(s);i.a},"38cb":function(e,t,a){"use strict";var s=a("9e92"),i=a.n(s);i.a},"4b44":function(e,t,a){},"4d97":function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",[e._v("Games")]),a("div",{staticStyle:{"margin-bottom":"30px"}},[e._v(" Here's a look at the games I've worked on - solo, jam, and team projects. ")]),a("ProjectsList",{attrs:{projects:e.projects}}),e.lightbox.open?a("div",{staticClass:"tech-lightbox",on:{click:function(t){return t.target!==t.currentTarget?null:e.closeLightbox(t)}}},[a("div",{staticClass:"tech-lightbox-content",attrs:{role:"dialog","aria-modal":"true"}},[a("button",{staticClass:"tech-lightbox-close",attrs:{"aria-label":"Close"},on:{click:e.closeLightbox}},[e._v("×")]),a("div",{staticClass:"tech-lightbox-title"},[e._v(e._s(e.lightbox.title))]),a("img",{attrs:{src:e.lightbox.src,alt:e.lightbox.title}})])]):e._e()],1)},i=[],n=a("2b0e"),r=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("div",{staticClass:"projects-list"},[e._l(e.projects,(function(t){return[a("div",{key:t.id,staticClass:"project-item",class:{wide:t.isWide,high:t.isHigh},on:{click:function(a){return e.showDetails(t)}}},[a("div",{staticClass:"project-item-media"},[t.thumbVideoUrl?[a("video",{staticClass:"project-media zoomable",attrs:{autoplay:"",loop:"",muted:"",playsinline:"",poster:t.thumbPosterUrl||t.iconUrl},domProps:{muted:!0}},[a("source",{attrs:{src:t.thumbVideoUrl,type:"video/mp4"}})])]:[a("div",{staticClass:"project-item-image zoomable",style:{backgroundImage:"url("+t.iconUrl+")"}})]],2),a("div",{staticClass:"title-bar",style:{"background-color":t.accentColor+"DD"}},[a("div",{staticClass:"title-text"},[e._v(" "+e._s(t.name)+" ")])])])]}))],2),a("ProjectDetailsOverlay",{attrs:{visible:e.showPopup,title:e.popupTitle,htmlContent:e.popupContent,color:e.popupColor},on:{close:function(t){e.showPopup=!1}}})],1)},o=[],l=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("transition",{attrs:{name:"fade"}},[e.visible?a("div",[a("div",{staticClass:"overlay"}),a("div",{staticClass:"dialog",style:{"background-color":e.color}},[a("h1",{staticClass:"dialog-title"},[e._v(e._s(e.title))]),a("div",{staticClass:"dialog-close",on:{click:function(t){return e.$emit("close")}}},[a("i",{staticClass:"fa fa-times fa-lg fa-fw"})]),a("div",{staticClass:"dialog-content"},[a("div",{domProps:{innerHTML:e._s(e.htmlContent)}}),a("div",{staticClass:"dialog-bottom"},[a("a",{staticClass:"dialog-close-button",on:{click:function(t){return e.$emit("close")}}},[e._v("Close")])])])])]):e._e()])},c=[],d=n["a"].extend({name:"ProjectDetailsOverlay",props:{visible:Boolean,color:String,title:String,htmlContent:String},methods:{getImage:function(e){console.log("fetching image "+e)}}}),g=d,p=(a("1e66"),a("2877")),h=Object(p["a"])(g,l,c,!1,null,"e66acff8",null),m=h.exports,v=n["a"].extend({name:"ProjectsList",components:{ProjectDetailsOverlay:m},props:{projects:Array},data:function(){return{showPopup:!1,popupTitle:"",popupColor:"",popupContent:""}},methods:{showDetails:function(e){this.popupTitle=e.name,this.popupColor=e.accentColor,this.popupContent=e.htmlDescription,this.showPopup=!0,window.scrollTo(0,0)}}}),u=v,f=(a("38cb"),Object(p["a"])(u,r,o,!1,null,"476f1f4b",null)),b=f.exports,y=function(){function e(e,t,a,s,i,n,r,o){void 0===i&&(i="#000000"),void 0===n&&(n=!1),void 0===r&&(r=!1),this.id=e,this.name=t,this.htmlDescription=s,this.iconUrl=a,this.isHigh=n,this.isWide=r,this.accentColor=i,this.thumbVideoUrl=null===o||void 0===o?void 0:o.thumbVideoUrl,this.thumbPosterUrl=null===o||void 0===o?void 0:o.thumbPosterUrl}return e}(),_=y,w=[new _("project-1","Ninja Froggy","img/projects/Steam_VerticalCapsule.png",'\n        <div class="paragraph">\n        <strong>Ninja Froggy™</strong> is a semi-open-world endless runner with roguelite progression, where you play as Froggy, a ninja dashing, slashing, and leaping through a procedurally generated world.\n        </div>\n        <div class="paragraph center">\n            <iframe class="youtube" src="https://www.youtube.com/embed/-p1FVbfQ_WE?si=zjy74sGrAGWuP_Vt" frameborder="0" allowfullscreen></iframe>\n        </div>\n        <div class="paragraph center">\n            <a href="https://store.steampowered.com/app/3785230/Ninja_Froggy/" target="_blank"><img src="img/projects/wishlist-steam.png" alt="Steam badge" /></a>\n        </div>\n\n        <div class="paragraph">\n            Main features :\n            <ul>\n            <li>Infinite, procedurally generated worlds littered with traps and enemies</li>\n            <li>Roguelite progression through collectible relics/sigils that stack in unique ways</li>\n            <li>Permanent stat upgrades by spending gold between runs to become more powerful</li>\n            <li>Core movement mechanics including dash, sprint, jump, wall-jump, etc.</li>\n            <li>Combat system with ranged and melee weapons (more planned for the future)</li>\n            <li>Designed for addictive replayability where every run feels different</li>\n            </ul>\n        </div>\n\n        <div class="paragraph center">\n            <img class="phone-screenshot" src="img/projects/NinjaFroggy_Screenshot1.png" alt="Ninja Froggy Screenshot" />\n            <img class="phone-screenshot" src="img/projects/NinjaFroggy_Screenshot2.png" alt="Ninja Froggy Screenshot" />\n            <img class="phone-screenshot" src="img/projects/NinjaFroggy_Screenshot3.png" alt="Ninja Froggy Screenshot" />\n            <img class="phone-screenshot" src="img/projects/NinjaFroggy_Screenshot4.png" alt="Ninja Froggy Screenshot" />\n        </div>\n\n        \x3c!-- ============================= --\x3e\n        \x3c!-- Developer Notes (Technical)   --\x3e\n        \x3c!-- ============================= --\x3e\n        <div class="paragraph">\n            <h2>Technical Details<h2/>\n        </div>\n\n        \x3c!-- 1) Terrain Generation & World Building --\x3e\n        <div class="paragraph">\n            <h3>Terrain Generation & World Building</h3>\n            <p><em><strong>Chunk design & rules:</strong></em> The world is built from block-based <strong>chunks</strong> that stream in around the player. A height-map driven pass defines base elevation; feature passes (roads, canals, rivers) run as overlays that can carve/paint across chunk boundaries without seams. Feature placement also respects slope constraints, adjacency rules, and reserved volumes. To keep rendering efficient, the terrain meshes are built using a greedy meshing algorithm, which merges adjacent blocks into larger faces. This dramatically reduces polygon count and draw calls while still preserving the block-based structure, making the system scalable for the large, procedurally generated game world.</p>\n\n            <p><em><strong>Asynchronous spawning & hitch-free loading:</strong></em> Terrain features, props, and foliage are enqueued into a <strong>deferred spawn queue</strong> processed across ticks. This avoids burst allocation and reduces frame spikes. All foliage uses <strong>Hierarchical Instanced Static Meshes (HISMs)</strong> for efficient rendering and memory use. Collectibles also rely on HISMs for bulk performance but can be promoted to <strong>Blueprint actors</strong> when special interactions are needed. For example, opening a chest triggers a spawn burst where collectibles jump outward in a circle with temporary physics enabled; once they land on a surface, they enter a <em>magnetized state</em> that pulls them toward the player and deposits them into the inventory. Reusable props (trees, rocks, pickups) are additionally served through an <strong>actor pool</strong> to minimize runtime allocations and component construction costs.</p>\n\n            <p><em><strong>Materials & visual cohesion:</strong></em> A single <strong>master material</strong> drives terrain look using layered noise and vertex/UV variation to break tiling and create organic patchiness (e.g., grass brightness variance). This keeps content data-driven while limiting texture memory growth.</p>\n\n            <p><em><strong>Current limitations & planned upgrades:</strong></em> The blocky terrain silhouette can clash with organic flora/fauna and the current pixelated UI. Planned changes include: <br/>1) smoothing distant silhouettes with LOD variants and/or mesh decimation, <br/>2) height-blended materials for softer transitions, <br/>3) revising UI away from pixelation to better match the environment\'s style, and <br/>4) expanding async streaming budgets based on device performance tiers.</p>\n        </div>\n        <div class="tech-gallery">\n            <div class="tech-hover-card" data-src="img/projects/NinjaFroggy_GreedyMeshing.gif" data-title="Greedy Meshing Visualization (Wireframe Overlay)">\n                <img src="img/projects/NinjaFroggy_GreedyMeshing.gif" alt="Greedy Meshing Visualization (Wireframe Overlay)" />\n                <div class="tech-caption">Greedy Meshing Visualization (Wireframe Overlay)</div>\n            </div>\n            <div class="tech-hover-card" data-src="img/projects/NinjaFroggy_Material.gif" data-title="Pixelated Material Material for Terrain Variation">\n                <img src="img/projects/NinjaFroggy_Material.gif" alt="Pixelated Material Material for Terrain Variation" />\n                <div class="tech-caption">Pixelated Material Material for Terrain Variation</div>\n            </div>\n        </div>\n\n        \x3c!-- 2) Jump Mechanic --\x3e\n        <div class="paragraph">\n            <br/>\n            <h3>Jump Mechanic & Movement Feel</h3>\n            <p><em><strong>Design goals:</strong></em> The jump is tuned for responsiveness across keyboard/controler/touch input while remaining readable in a blocky world. Systems include <strong>coyote time</strong> (late jump forgiveness), <strong>input buffering</strong> (pre-press acceptance), <strong>variable jump height</strong> (press duration scaling), and <strong>apex assists</strong> (slight gravity modulation near peak for air control).</p>\n\n            <p><em><strong>World interaction:</strong></em> Edge cases are handled through conservative collision sweeps and slope checks on block tops. Wall-jumps and ledge snaps integrate with the state machine so animation blending doesn\'t fight physics. Camera and FOV nudges at takeoff/landing provide subtle motion cues without causing motion sickness on mobile.</p>\n\n            <p><em><strong>Implementation notes:</strong></em> Movement states (idle/run/jump/fall/wall-interact) are authored as a compact state machine with cached poses. Physics impulses are kept deterministic per tick; input sampling is decoupled from animation update to avoid frame-rate dependent jump height.</p>\n        </div>\n        <div class="tech-gallery">\n            <div class="tech-hover-card" data-src="img/projects/NinjaFroggy_Jump.gif" data-title="Smart Jump System: Forgiveness & Precision">\n                <img src="img/projects/NinjaFroggy_Jump.gif" alt="Jump Mechanic with Line Traces" />\n                <div class="tech-caption">Smart Jump System: Forgiveness & Precision</div>\n            </div>\n            <div class="tech-hover-card" data-src="img/projects/NinjaFroggy_FSM.gif" data-title="Multi-Layered State Machines for Responsive Control">\n                <img src="img/projects/NinjaFroggy_FSM.gif" alt="Multi-Layered State Machines for Responsive Control" />\n                <div class="tech-caption">Multi-Layered State Machines for Responsive Control</div>\n            </div>\n        </div>\n\n        \x3c!-- 3) Enemy AI & Custom Pathfinding --\x3e\n        <div class="paragraph">\n            <br/>\n            <h3>Enemy AI & Custom Pathfinding</h3>\n            <p><em><strong>Why not NavMesh?:</strong></em> The world is fully procedural and streams/changes at runtime; baking and continuously updating a traditional NavMesh is impractical for per-chunk edits. Instead, enemies move on a <strong>grid-aware navigation layer</strong> that mirrors the terrain\'s block occupancy.</p>\n\n            <p><em><strong>Pathfinding & perception:</strong></em> Navigation uses <strong>A*</strong> over the block grid with dynamic occupancy updates (terrain features, props, and temporary obstacles). AI is organized as lightweight <strong>finite state machines</strong> (e.g., patrol → investigate → chase → recover), with per-enemy behaviors layered on top (e.g., Chest Mimic mirrors player direction within range; Turtle idles until sighted target, then charges). Perception integrates line-of-sight checks and simple heuristic costs for hazards.</p>\n\n            <p><em><strong>Runtime stability & performance:</strong></em> To avoid hitches, path requests are budgeted per frame and processed asynchronously; partial paths are acceptable at long distances and are refined as chunks stream in. This keeps enemies responsive even as the world morphs around the player.</p>\n        </div>\n        <div class="tech-gallery">\n            <div class="tech-hover-card" data-src="img/projects/NinjaFroggy_Mimic.gif" data-title="AI Behavior Showcase (Chest Mimic)">\n                <img src="img/projects/NinjaFroggy_Mimic.gif" alt="AI Behavior Showcase (Chest Mimic)" />\n                <div class="tech-caption">AI Behavior Showcase (Chest Mimic)</div>\n            </div>\n            <div class="tech-hover-card" data-src="img/projects/NinjaFroggy_Turtle.gif" data-title="Pathfinding & Perception (Turtle)">\n                <img src="img/projects/NinjaFroggy_Turtle.gif" alt="AI Behavior Showcase (Chest Mimic)" />\n                <div class="tech-caption">AI Behavior Showcase (Chest Mimic)</div>\n            </div>\n        </div>\n        ',"#588700",!0,!0,{thumbVideoUrl:"img/projects/NinjaFroggy_Gameplay.mp4",thumbPosterUrl:"img/projects/Steam_VerticalCapsule.png"}),new _("project-2","Bubble Bobbler","img/projects/BubbleBobbler_Thumbnail.png",'\n        <div class="paragraph">\n            <strong>Bubble Bobbler</strong> is a 3D platformer created for Global Game Jam 2025, where bubbles become tools for solving puzzles and platforming challenges.\n            This project is currently on the shelf but there are plans to resume work in the near future.\n        </div>\n        <div class="paragraph center">\n            <iframe class="youtube" src="https://www.youtube.com/embed/TzFYr8H7fcM?si=6L5NFBltXyqLB4Mj" frameborder="0" allowfullscreen></iframe>\n        </div>\n        <div class="paragraph center">\n            <a href="https://galactic-gateway-games.itch.io/bubble-bobbler" target="_blank"><img src="img/projects/itchiobutton.png" alt="Steam/itch badge" /></a>\n        </div>\n\n        <div class="paragraph">\n            Main features :\n            <ul>\n            <li>3D platformer where various types of bubbles are used for different challenges</li>\n            <li>Physics-driven puzzles solved by creating and manipulating bubbles</li>\n            <li>Bubbles used as platforms, lifts, and tools to move objects in creative ways</li>\n            </ul>\n        </div>\n\n        <div class="paragraph center">\n            <img class="pc-screenshot" src="img/projects/BubbleBobbler_Thumbnail.png" alt="Bubble Bobbler Screenshot" />\n            <img class="pc-screenshot" src="img/projects/BubbleBobbler_Screenshot1.png" alt="Bubble Bobbler Screenshot" />\n            <img class="pc-screenshot" src="img/projects/BubbleBobbler_Screenshot2.png" alt="Bubble Bobbler Screenshot" />\n            <img class="pc-screenshot" src="img/projects/BubbleBobbler_Screenshot3.png" alt="Bubble Bobbler Screenshot" />\n        </div>\n\n        \x3c!-- ============================= --\x3e\n        \x3c!-- Developer Notes (Technical)   --\x3e\n        \x3c!-- ============================= --\x3e\n        <div class="paragraph">\n            <h2>Technical Details (Early Stage)<h2/>\n        </div>\n\n        \x3c!-- 1) Bubble Physics Mechanic --\x3e\n        <div class="paragraph">\n            <h3>Bubble Physics Mechanic (Prototype)</h3>\n            <p><em><strong>Design intent:</strong></em> Bubbles act as physically simulated tools: temporary platforms, lifts, and object manipulators.</p>\n            <p><em><strong>Technical approach:</strong></em> Bubbles use physics bodies with tuned mass/drag and constraint-driven interactions. For "platform" behavior, collision channels and one-way collision checks allow the player to stand or bounce while preserving stable stacking. For "lift"/"push," impulses are applied along surface normals with clamped force to avoid jitter. Lifetime, scale, and buoyancy are parameterized for puzzle readability.</p>\n            <p><em><strong>Development status:</strong></em> Core feel tuning and interaction edge-cases (stacking stability, tunneling) are the current focus.</p>\n        </div>\n\n        \x3c!-- 2) Blockout, Save System, Level Streaming --\x3e\n        <div class="paragraph">\n            <br/>\n            <h3>Blockout & Streaming + Save System (Prototype)</h3>\n            <p><em><strong>Blockout-first pipeline:</strong></em> Trailer/gameplay footage reflects a greybox layout used to validate pacing, sightlines, and puzzle beats before art pass.</p>\n            <p><em><strong>Streaming architecture:</strong></em> Early work integrates <strong>dynamic level streaming</strong> with <strong>World Partition</strong> to load puzzle chunks and set pieces on demand. The goal is minimal hitching while preserving deterministic puzzle state.</p>\n            <p><em><strong>Save/restore:</strong></em> A lightweight save system snapshots player state, puzzle toggles, and streamed sublevels to resume mid-progression without breaking sequencing.</p>\n            <p><em><strong>Development Status:</strong></em> Systems exist as prototypes; polish is pending once production resumes.</p>\n        </div>\n\n        \x3c!-- 3) AI Foundations: NavMesh/EQS/Behavior Trees --\x3e\n        <div class="paragraph">\n            <br/>\n            <h3>AI Foundations: NavMesh, EQS, and Behavior Trees (Prototype)</h3>\n            <p><em><strong>Navigation:</strong></em> AI leverages Unreal <strong>NavMesh</strong> for general traversal within authored spaces. <strong>EQS</strong> queries are used for choosing vantage points/cover and selecting interaction targets. <strong>Behavior Trees</strong> orchestrate high-level behaviors (patrol, pursue, investigate disruptions from bubble interactions).</p>\n            <p><em><strong>Development Status:</strong></em> Baseline scaffolding and test behaviors exist; content authoring and tuning remain.</p>\n        </div>\n\n        \x3c!-- 4) Enemy Concepts --\x3e\n        <div class="paragraph">\n            <br/>\n            <h3>Enemy Concepts (Robots)</h3>\n            <p><em><strong>Pursuer Bot:</strong></em> Mobile robot that spawns at scripted locations/events to block progress. It actively hunts the player via <strong>NavMesh</strong>; intended counters include evasion or trapping with bubbles (e.g., pinning, wedging, or redirecting using bubble forces).</p>\n            <p><em><strong>Anti-Bubble Turret:</strong></em> Static defense that prioritizes destroying player bubbles on sight, forcing the player to neutralize it (or stealth past) before proceeding.</p>\n            <p><em><strong>Development Status:</strong></em> Concept and behavior specs are drafted; functional prototypes are incomplete due to time constraints.</p>\n        </div>\n        ',"#d17d00",!1,!1,{thumbVideoUrl:"img/projects/BubbleBobbler_Gameplay.mp4",thumbPosterUrl:"img/projects/BubbleBobbler_Thumbnail.png"}),new _("project-3","Deal: A Green New Election","img/projects/deal-icon.png",'\n    <div class="paragraph">\n        <a href="https://earthgames.org/2019/09/19/deal-a-green-new-election/" target="_blank">Deal: A Green New Election</a>\n        is a narrative strategy game about running a campaign for a Green New Deal ballot initiative.\n        Players balance messaging, voter outreach, and tough choices while facing opposition from powerful fossil fuel interests.\n    </div>\n    <div class="paragraph center">\n        <img class="youtube" src="img/projects/deal-banner.png" alt="Deal Screenshot" />\n    </div>\n    <div class="paragraph center">\n        <a href="https://earthgamesuw.itch.io/deal-a-green-new-election" target="_blank"><img src="img/projects/play-in-browser.png" alt="Play in Browser" /></a>\n        <a href="https://apps.apple.com/us/app/deal-a-green-new-election/id1480168937?ls=1" target="_blank"><img src="img/projects/download-app-store.png" alt="Download on the App Store" /></a>\n        <a href="https://play.google.com/store/apps/details?id=org.EarthGames.DealAGNE" target="_blank"><img src="img/projects/get-on-google-play.png" alt="Get on Google Play" /></a>\n    </div>\n\n    <div class="paragraph">\n        Main features :\n        <ul>\n        <li>Mobile-first design for iOS and Android, with a browser version also available</li>\n        <li>Short campaign format: 15 weeks of strategy playable in 5-10 minutes</li>\n        <li>Decision-making system around voter targeting, messaging, and interviews</li>\n        <li>Narrative encounters with CEOs, activists, disasters, and press events</li>\n        <li>Built collaboratively as part of the <a href="https://earthgames.org/" target="_blank">EarthGames</a> team</li>\n        </ul>\n    </div>\n\n    <div class="paragraph center">\n        <img class="phone-screenshot" src="https://earthgames.org/wp-content/uploads/2019/09/img_0303.png?w=225" alt="Deal Screenshot" width="225" height="auto" />\n        <img class="phone-screenshot" src="https://earthgames.org/wp-content/uploads/2019/09/img_0307.png?w=225" alt="Deal Screenshot" width="225" height="auto" />\n        <img class="phone-screenshot" src="img/projects/Deal_Screenshot1.png" alt="Deal Screenshot" width="225" height="auto" />\n        <img class="phone-screenshot" src="img/projects/Deal_Screenshot2.png" alt="Deal Screenshot" width="225" height="auto" />\n    </div>\n\n    \x3c!-- ============================= --\x3e\n    \x3c!-- Developer Notes (Technical)   --\x3e\n    \x3c!-- ============================= --\x3e\n    <div class="paragraph">\n        <h2>Technical Details<h2/>\n    </div>\n    <div class="paragraph">\n        <h3>Cross-Platform Narrative Systems</h3>\n        <p>The game was built with a <strong>mobile-first architecture</strong>, supporting iOS, Android, and a WebGL/browser port. This required lightweight assets, efficient UI scaling across devices, and attention to short-session performance. The branching narrative system is <strong>data-driven</strong>, making it straightforward to expand encounters with new characters, voter types, and events without modifying core code. The project achieved <strong>hundreds of downloads</strong> across platforms and received positive player reviews on both Google Play and the App Store.</p>\n    </div>\n\n    <div class="paragraph">\n        <br/>\n        <h3>Decision-Making & Campaign State</h3>\n        <p>The 15-week campaign loop is implemented as a <strong>state machine</strong>, with each week representing a discrete state. Player choices update campaign variables such as <em>voter support, press coverage, and funding</em>, which then influence available events. This design emphasizes replayability, as small decisions cascade into diverging narrative outcomes. I also <strong>led multiple playtesting sessions</strong>, iterating on campaign pacing and decision outcomes to keep play sessions polished and engaging.</p>\n    </div>\n\n    <div class="paragraph">\n        <br/>\n        <h3>Collaborative Development & Content Creation</h3>\n        <p>This project was built as part of the <a href="https://earthgames.org/" target="_blank">EarthGames</a> team of eight. My contributions focused on <strong>UI/UX flow</strong> and <strong>technical stability across mobile devices</strong>, as well as designing and developing around <strong>20 custom assets, pixel art, and animations</strong> for game elements.</p>\n    </div>\n    ',"#269dde")],k=n["a"].extend({name:"GameProjects",components:{ProjectsList:b},data:function(){return{projects:w,lightbox:{open:!1,src:"",title:""}}},mounted:function(){var e=this,t=function(t){var a,s,i=t.target;if(i){var n=i.closest&&i.closest(".tech-hover-card");if(n){var r=n.getAttribute("data-src")||(null===(a=n.querySelector("img"))||void 0===a?void 0:a.getAttribute("src"))||"",o=n.getAttribute("data-title")||((null===(s=n.querySelector(".tech-caption"))||void 0===s?void 0:s.textContent)||"").trim();r&&e.openLightbox(r,o)}}};this.$el.addEventListener("click",t),this._galleryClickHandler=t;var a=function(t){"Escape"===t.key&&e.lightbox.open&&e.closeLightbox()};window.addEventListener("keydown",a),this._galleryKeyHandler=a},beforeDestroy:function(){this._galleryClickHandler&&this.$el.removeEventListener("click",this._galleryClickHandler),this._galleryKeyHandler&&window.removeEventListener("keydown",this._galleryKeyHandler)},methods:{openLightbox:function(e,t){this.lightbox={open:!0,src:e,title:t},document.documentElement.style.overflow="hidden"},closeLightbox:function(){this.lightbox.open=!1,this.lightbox.src="",this.lightbox.title="",document.documentElement.style.overflow=""}}}),C=k,S=(a("b24e"),Object(p["a"])(C,s,i,!1,null,null,null));t["default"]=S.exports},"57f1":function(e,t,a){"use strict";var s=a("eb5b"),i=a.n(s);i.a},"67f3":function(e,t,a){"use strict";var s=a("ee3f"),i=a.n(s);i.a},"7c58":function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"other-page"},[a("h1",[e._v("Showcase")]),a("p",{staticClass:"intro"},[e._v(" A curated collection of 3D models, animations, VFX, published assets, and creative experiments. ")]),a("nav",{staticClass:"section-nav",attrs:{"aria-label":"Section navigation"}},[a("a",{attrs:{href:"#models"},on:{click:function(t){return t.preventDefault(),e.scrollTo("models")}}},[e._v("3D Models/Animations")]),a("a",{attrs:{href:"#vfx"},on:{click:function(t){return t.preventDefault(),e.scrollTo("vfx")}}},[e._v("Visual Effects")]),a("a",{attrs:{href:"#assets"},on:{click:function(t){return t.preventDefault(),e.scrollTo("assets")}}},[e._v("Published Assets")]),a("a",{attrs:{href:"#videos"},on:{click:function(t){return t.preventDefault(),e.scrollTo("videos")}}},[e._v("Timelapses")]),a("a",{attrs:{href:"#other"},on:{click:function(t){return t.preventDefault(),e.scrollTo("other")}}},[e._v("Extras")])]),a("section",{staticClass:"section",attrs:{id:"models"}},[e._m(0),a("div",{staticClass:"gallery"},[a("p",{staticClass:"section-sub",staticStyle:{"grid-column":"span 12"}},[e._v("Froggy Animation Set (Used in Ninja Froggy for the main character)")]),a("article",{staticClass:"card span-2"},[a("div",{staticClass:"card-media"},[a("video",{attrs:{autoplay:"",loop:"",muted:"",playsinline:"",width:"100%",height:"auto",loading:"lazy"},domProps:{muted:!0}},[a("source",{attrs:{src:"img/projects/Froggy_Animation.mp4",type:"video/mp4"}}),e._v(" Your browser does not support the video tag. ")])])]),e._m(1),a("article",{staticClass:"card span-2"},[a("div",{staticClass:"card-media"},[a("video",{attrs:{autoplay:"",loop:"",muted:"",playsinline:"",width:"100%",height:"auto",loading:"lazy"},domProps:{muted:!0}},[a("source",{attrs:{src:"img/projects/Enemies_Animation.mp4",type:"video/mp4"}}),e._v(" Your browser does not support the video tag. ")])])]),e._m(2),a("article",{staticClass:"card span-2"},[a("div",{staticClass:"card-media"},[a("video",{attrs:{autoplay:"",loop:"",muted:"",playsinline:"",width:"100%",height:"auto",loading:"lazy"},domProps:{muted:!0}},[a("source",{attrs:{src:"img/projects/Valuables_Animation.mp4",type:"video/mp4"}}),e._v(" Your browser does not support the video tag. ")])])])])]),a("section",{staticClass:"section",attrs:{id:"vfx"}},[e._m(3),a("div",{staticClass:"gallery"},[a("p",{staticClass:"section-sub",staticStyle:{"grid-column":"span 12"}},[e._v("VFX Set (Niagara particle effects and shader-based visuals)")]),a("article",{staticClass:"card span-2"},[a("div",{staticClass:"card-media"},[a("video",{attrs:{autoplay:"",loop:"",muted:"",playsinline:"",width:"100%",height:"auto",loading:"lazy"},domProps:{muted:!0}},[a("source",{attrs:{src:"img/projects/VFX.mp4",type:"video/mp4"}}),e._v(" Your browser does not support the video tag. ")])])])])]),a("section",{staticClass:"section",attrs:{id:"assets"}},[e._m(4),a("div",{staticClass:"gallery"},e._l(e.publishedAssets,(function(e){return a("article",{key:e.id,staticClass:"card",class:{"span-2":2===e.span}},[a("div",{staticClass:"card-media"},[a("img",{attrs:{src:e.thumb,alt:e.alt||"Asset image",loading:"lazy"}})])])})),0)]),e._m(5),e._m(6)])},i=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("header",{staticClass:"section-header"},[a("br"),a("h2",[e._v("3D Models/Animations")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",{staticClass:"section-sub",staticStyle:{"grid-column":"span 12"}},[a("br"),e._v("Enemies Animation Set (A few enemies from Ninja Froggy)")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",{staticClass:"section-sub",staticStyle:{"grid-column":"span 12"}},[a("br"),e._v("Other Animations (Coins, valuables, and in-game effects) ")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("header",{staticClass:"section-header"},[a("br"),a("h2",[e._v("Particle Effects")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("header",{staticClass:"section-header"},[a("br"),a("h2",[e._v("Published Assets")]),a("p",{staticClass:"section-sub"},[e._v(" Published stylized asset packs and singles available on the "),a("a",{attrs:{href:"https://www.fab.com/sellers/NinjaFroggy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fab")]),e._v(" marketplace ")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"section",attrs:{id:"videos"}},[a("header",{staticClass:"section-header"},[a("br"),a("h2",[e._v("Timelapses")]),a("p",{staticClass:"section-sub"},[e._v(" Watch the full playlist of modeling timelapses on my "),a("a",{attrs:{href:"https://www.youtube.com/channel/UCsFRYYdH_maM6EVQYDYJvVg",target:"_blank",rel:"noopener noreferrer"}},[e._v("YouTube")]),e._v(" channel ")])]),a("div",{staticClass:"video-grid"},[a("div",{staticClass:"video-embed"},[a("iframe",{attrs:{src:"https://www.youtube.com/embed/videoseries?si=oa59tro5M3nD1-IX&list=PLU6d9DbUVNtwFlI-aVxRwEkMSRHMuqktK",title:"Modeling Timelapse Playlist",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""}})]),a("div",{staticClass:"video-embed"},[a("iframe",{attrs:{src:"https://www.youtube.com/embed/videoseries?si=d2foj7ennLzGt1d0&list=PLU6d9DbUVNtzGG1nwuUQRGSRjbvNqDwmp",title:"Enemy Modeling/Animation Playlist",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:""}})])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"section",attrs:{id:"other"}},[a("header",{staticClass:"section-header"},[a("br"),a("h2",[e._v("Extras")])]),a("p",{staticClass:"section-sub gallery-sub"},[e._v("SolidWorks Models (CAD models built using industry-standard workflows)")]),a("div",{staticClass:"gallery"},[a("article",{staticClass:"card span-2"},[a("div",{staticClass:"card-media"},[a("img",{attrs:{src:"img/projects/Hairdryer.png",alt:"SolidWorks Hairdryer model",loading:"lazy"}}),a("a",{staticClass:"media-link-badge",attrs:{href:"https://www.dropbox.com/scl/fi/47vhrfjdd6pokc9hjhu5f/HairDryer.SLDPRT?rlkey=67r7ac6uq09tpuu0ofpj84z9q&e=1&dl=0",target:"_blank",rel:"noopener noreferrer","aria-label":"Open Dropbox for SolidWorks HairDryer model pieces"}},[e._v(" Dropbox link ")])])]),a("div",{staticClass:"stack"},[a("article",{staticClass:"card"},[a("div",{staticClass:"card-media"},[a("img",{attrs:{src:"img/projects/Hammer.png",alt:"SolidWorks Hammer model",loading:"lazy"}}),a("a",{staticClass:"media-link-badge",attrs:{href:"https://www.dropbox.com/scl/fi/x9nyo23yx9f7xhd0xm9sy/Hammer.7z?dl=0&e=1&file_subpath=%2FHammer&rlkey=hb4hc5235s73omkz65pqjvbsr",target:"_blank",rel:"noopener noreferrer","aria-label":"Open Dropbox for SolidWorks Hammer model pieces"}},[e._v(" Dropbox link ")])])]),a("article",{staticClass:"card"},[a("div",{staticClass:"card-media"},[a("img",{attrs:{src:"img/projects/ToothpasteTube.png",alt:"SolidWorks Toothpaste Tube model",loading:"lazy"}}),a("a",{staticClass:"media-link-badge",attrs:{href:"https://www.dropbox.com/scl/fi/7fdvqom41flp6evecz83x/ToothpasteTube.SLDPRT?rlkey=nfyj9yz996wxguqrh5oirj6er&e=1&dl=0",target:"_blank",rel:"noopener noreferrer","aria-label":"Open Dropbox for SolidWorks Toothpaste Tube model pieces"}},[e._v(" Dropbox link ")])])])])]),a("br"),a("p",{staticClass:"section-sub gallery-sub"},[e._v("Some of my pixel art")]),a("div",{staticClass:"gallery"},[a("article",{staticClass:"card span-2"},[a("div",{staticClass:"card-media"},[a("img",{attrs:{src:"img/projects/Sigils.png",alt:"Sigils for Ninja Froggy",loading:"lazy"}})])])])])}],n={name:"OtherPage",data(){return{publishedAssets:[{id:"environment-pack",thumb:"img/projects/Environment_Pack.png",alt:"Stylized Environment Pack cover"},{id:"trees-pack",thumb:"img/projects/Trees_Pack.png",alt:"Stylized Trees Pack cover"},{id:"plants-pack",thumb:"img/projects/Plants_Pack.png",alt:"Stylized Plants Pack cover"},{id:"rocks-pack",thumb:"img/projects/Rocks_Pack.png",alt:"Stylized Rocks Pack cover"},{id:"land-vehicles",thumb:"img/projects/Vehicles_Land_Pack.png",alt:"Stylized Land Vehicles Pack cover"},{id:"sea-vehicles",thumb:"img/projects/Vehicles_Sea_Pack.png",alt:"Stylized Sea Vehicles Pack cover"}]}},methods:{scrollTo(e){const t=document.getElementById(e);t&&t.scrollIntoView({behavior:"smooth",block:"start"})}}},r=n,o=(a("9cbb"),a("2877")),l=Object(o["a"])(r,s,i,!1,null,"944958a6",null);t["default"]=l.exports},"7d9d":function(e,t,a){"use strict";var s=a("4b44"),i=a.n(s);i.a},"8cdb":function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"http-404"},[e._v("404 🙈")])},i=[],n=(a("67f3"),a("2877")),r={},o=Object(n["a"])(r,s,i,!1,null,"c64612d2",null);t["default"]=o.exports},"9cbb":function(e,t,a){"use strict";var s=a("15b4"),i=a.n(s);i.a},"9e92":function(e,t,a){},b24e:function(e,t,a){"use strict";var s=a("c833"),i=a.n(s);i.a},b8fa:function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},i=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("h1",[e._v("Let's get in touch")]),a("div",{staticStyle:{"margin-bottom":"40px"}},[e._v(" Got thoughts on Ninja Froggy, interested in my 3D assets, or just want to talk game development? "),a("br"),e._v("Drop me a message! I'm always happy to connect with fellow creators and players. ")]),a("ul",[a("li",[a("i",{staticClass:"fa fa-user-circle-o fa-lg fa-fw"}),a("a",{attrs:{href:"https://galacticgatewaygames.com/",target:"_blank"}},[e._v("galacticgatewaygames.com")])]),a("li",[a("i",{staticClass:"fa fa-envelope-o fa-lg fa-fw"}),a("a",{attrs:{href:"mailto:sisirkadiveti@gmail.com",target:"_blank"}},[e._v("sisirkadiveti@gmail.com")])]),a("li",[a("i",{staticClass:"fa fa-linkedin fa-lg fa-fw",staticStyle:{"vertical-align":"-5%"}}),a("a",{attrs:{href:"https://www.linkedin.com/in/sisir-kadiveti/",target:"_blank"}},[e._v("LinkedIn")])]),a("li",[a("i",{staticClass:"fa fa-github fa-lg fa-fw"}),a("a",{attrs:{href:"https://github.com/sisirk",target:"_blank"}},[e._v("Github")])]),a("li",[a("i",{staticClass:"fa fa-gamepad fa-lg fa-fw"}),a("a",{attrs:{href:"https://galactic-gateway-games.itch.io/",target:"_blank"}},[e._v("itch.io")])]),a("li",[a("i",{staticClass:"fa fa-steam fa-lg fa-fw"}),a("a",{attrs:{href:"https://store.steampowered.com/search/?developer=Galactic%20Gateway%20LLC",target:"_blank"}},[e._v("Steam")])]),a("li",[a("i",{staticClass:"fa fa-twitter fa-lg fa-fw"}),a("a",{attrs:{href:"https://x.com/GG_StudioX",target:"_blank"}},[e._v("X (Twitter)")])]),a("li",[a("i",{staticClass:"fa fa-youtube fa-lg fa-fw"}),a("a",{attrs:{href:"https://www.youtube.com/channel/UCsFRYYdH_maM6EVQYDYJvVg",target:"_blank"}},[e._v("YouTube")])])])])}],n=(a("57f1"),a("2877")),r={},o=Object(n["a"])(r,s,i,!1,null,"5a4582a6",null);t["default"]=o.exports},c833:function(e,t,a){},dec8:function(e,t,a){},e601:function(e,t,a){},eb5b:function(e,t,a){},ee3f:function(e,t,a){},f820:function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticStyle:{"margin-bottom":"80px"}},[a("h1",[e._v("Hello!")]),a("div",{staticClass:"paragraph"},[e._m(0),e._m(1),a("div",{staticStyle:{"margin-top":"20px"}},[e._v(" Before diving full-time into game dev, I worked as a software engineer at Microsoft and Amazon, which means I can debug a memory leak... and accidentally create one in the same day. Now, I use those skills to wrangle procedural generation, enemy AI, and sometimes gravity itself. ")]),e._m(2),a("div",{staticStyle:{"margin-top":"40px"}},[e._v(" Right now it's just me, endless lines of code, and questionable life choices at 2 AM. If you'd like to chat about games, swap ideas, or team up on something cool, you can reach me at "),a("a",{attrs:{href:"mailto:sisirkadiveti@gmail.com"}},[e._v("sisirkadiveti@gmail.com")]),e._v(" or connect with me "),a("router-link",{attrs:{to:"/contact"}},[e._v("here")]),e._v(". ")],1)]),e._m(3),a("div",{staticStyle:{clear:"both"}})])},i=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[e._v(" I'm "),a("strong",[e._v("Sisir Kadiveti")]),e._v(", a software engineer turned indie game developer."),a("br")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[e._v(" I run "),a("a",{attrs:{href:"https://galacticgatewaygames.com/#",target:"_blank"}},[e._v("Galactic Gateway LLC")]),e._v(" where I'm building "),a("a",{attrs:{href:"https://store.steampowered.com/app/3785230/Ninja_Froggy/",target:"_blank"}},[e._v("Ninja Froggy™")]),e._v(", a semi-open-world endless runner with roguelite chaos. I also dabble in jam projects like "),a("a",{attrs:{href:"https://galactic-gateway-games.itch.io/bubble-bobbler",target:"_blank"}},[e._v("Bubble Bobbler")]),e._v(" (a working title... unless people actually like it, in which case I'll pretend it was intentional). ")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticStyle:{"margin-top":"20px"}},[e._v(" When I'm not teaching a frog how to swing a katana at unsuspecting enemies, I create "),a("a",{attrs:{href:"https://www.fab.com/sellers/NinjaFroggy",target:"_blank"}},[e._v("stylized 3D assets")]),e._v(", occasionally lose track of time in Blender (we've all been there), and document the chaos on my "),a("a",{attrs:{href:"https://www.youtube.com/channel/UCsFRYYdH_maM6EVQYDYJvVg",target:"_blank"}},[e._v("YouTube")]),e._v(" channel. ")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"photo"},[a("img",{attrs:{src:"img/Froggy_Profile.png",alt:"Avatar of Froggy",width:"256",height:"256"}})])}],n=(a("03cd"),a("2877")),r={},o=Object(n["a"])(r,s,i,!1,null,"67105b3b",null);t["default"]=o.exports}}]);
//# sourceMappingURL=about.f8a161ef.js.map